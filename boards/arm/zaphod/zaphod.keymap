/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define OTH_L 2
#define NUM_L 3
#define SYM_L 4
#define MED_L 5
#define FUN_L 6

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        med_mo {
	    timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo MED_L>;
        };

        fn_mo {
	    timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo FUN_L>;
        };

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp Q        &kp W      &kp E       &kp R          &kp T          &kp Y            &kp U          &kp I            &kp O        &kp P
                &hm LSHFT A  &kp S      &kp D       &kp F          &kp G          &kp H            &kp J          &kp K            &kp L        &hm RSHFT SEMI
                &kp Z        &hm LALT X &hm LGUI C  &hm LCTRL V    &kp B          &kp N            &hm RCTRL M    &hm LGUI COMMA   &hm LALT DOT &kp QUOT
                                                    &lt NAV_L ESC  &kp BKSP       &kp SPACE        &lt NUM_L RET
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &kp GRAVE    &kp C_MUTE   &trans      &trans          &kp C_PLAY_PAUSE &kp C_PLAY_PAUSE &kp LBRC       &kp RBRC    &kp LBKT   &kp RBKT
                &kp C_BRI_UP &kp C_VOL_UP &kp HOME    &kp PG_UP       &kp LC(LS(TAB))  &kp LARW         &kp DARW       &kp UARW    &kp RARW   &kp PIPE
                &kp C_BRI_DN &kp C_VOL_DN &kp END     &kp PG_DN       &kp LC(TAB)      &kp HOME         &kp END        &kp LPAR    &kp RPAR   &kp QMARK
                                                      &trans          &trans           &kp TAB          &kp DEL
            >;
        };

        other_layer {
            label = "Other";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &bt BT_CLR
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans          &trans       &trans           &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &kp EXCL   &kp AT         &kp HASH       &kp DLLR        &kp PRCNT     &kp CARET       &kp AMPS        &kp STAR    &kp LPAR   &kp RPAR
                &kp N1     &kp N2         &kp N3         &kp N4          &kp N5        &kp N6          &kp N7          &kp N8      &kp N9     &kp N0
                &kp BSLH   &hm LALT TILDE &hm LGUI EQUAL &hm LCTRL MINUS &kp PLUS      &kp UNDER       &hm RCTRL SPACE &trans      &trans     &kp SLASH
                                                         &trans          &trans        &trans          &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp LBRC     &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp RBRC        &trans &trans   &trans    &trans    &trans
                &kp COLON    &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp PLUS        &trans &trans   &trans    &trans    &trans
                &kp TILDE    &kp LS(N1)  &kp LS(N2)  &kp LS(N3) &kp LS(BSLH)    &trans &trans   &trans    &trans    &trans
                                                   &kp LS(N0) &kp UNDER         &trans &trans
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp C_PREV     &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                                                  &trans          &trans       &kp C_STOP       &kp C_PLAY_PAUSE
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
                &trans       &trans     &trans      &trans     &trans            &trans          &trans         &trans      &kp INS    &kp SLCK
                &hm LSHFT F1 &kp F2     &kp F3      &kp F4     &kp F5            &kp F6          &kp F7         &kp F8      &kp F9     &hm RSHFT F10
                &kp F11      &kp F12    &trans      &trans     &trans            &trans          &trans         &trans      &kp PSCRN  &kp PAUSE_BREAK
                                                    &trans     &trans            &trans          &trans
            >;
        };
    };
};

